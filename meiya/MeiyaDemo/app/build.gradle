apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.taidii.app"
        minSdkVersion 23
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        def keystoreDir = "F:/AndroidWork/keyStore";
        releaseConfig {
            File propFile = file(keystoreDir + "/maplebear/singnconfig.properties")
            def Properties prop = new Properties();
            prop.load(new FileInputStream(propFile));
            storeFile = file(keystoreDir + "/maplebear/maplebear.jks")
            keyAlias = prop['keyAlias']
            keyPassword = prop['keyPassword']
            storePassword = prop['storePassword']
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            zipAlignEnabled true
            // 移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
        debug {
            signingConfig null
            signingConfig signingConfigs.releaseConfig
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            // 重命名产出的apk文件
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                File outputDirectory = new File(outputFile.parent);
                def fileName
                if (variant.buildType.name == "release") {
                    File localPropertiesFile = project.rootProject.file('local.properties');
                    if (localPropertiesFile.exists()) {
                        Properties tempProp = new Properties()
                        InputStream inputStream = localPropertiesFile.newDataInputStream();
                        tempProp.load(inputStream);
                        if (tempProp.containsKey("release.dir")) {
                            outputDirectory = new File(tempProp["release.dir"]);
                        }
                    }
                    fileName = "${defaultConfig.versionName}-release.apk"
                } else {
                    fileName = "${defaultConfig.versionName}-debug.apk"
                }
                outputFile = new File(outputDirectory, fileName)
            }
            // 删除unaligned apk
            if (output.zipAlign != null) {
                output.zipAlign.doLast {
                    //  output.zipAlign.inputFile.delete()
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.0.0-beta1'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2'
    implementation 'com.squareup.okhttp3:okhttp:3.6.0'
    implementation 'com.google.code.gson:gson:2.7'
    implementation 'com.orhanobut:logger:1.15'
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    implementation 'com.github.open-android:BridgeWebView:v1.0'
    implementation 'com.zhy:okhttputils:2.6.2'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.github.ybq:Android-SpinKit:1.0.4'

}
